Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 $@2: %empty

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   10 variable_list: %empty
   11              | variable_list variable

   12 variable: _TYPE _ID _SEMICOLON
   13         | _TYPE _ID _LSQUARE literal _RSQUARE _SEMICOLON

   14 statement_list: %empty
   15               | statement_list statement

   16 statement: compound_statement
   17          | assignment_statement
   18          | if_statement
   19          | return_statement
   20          | while_statement
   21          | for_statement

   22 @3: %empty

   23 $@4: %empty

   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp $@4 _SEMICOLON for_promena _RPAREN _LBRACKET statement_list _RBRACKET

   25 for_promena: _ID _ASSIGN num_exp
   26            | inc_dec_exp

   27 @5: %empty

   28 $@6: %empty

   29 while_statement: _WHILE @5 _LPAREN while_uslov $@6 _RPAREN _LBRACKET statement_list _RBRACKET

   30 while_uslov: exp
   31            | rel_exp

   32 compound_statement: _LBRACKET statement_list _RBRACKET

   33 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   34                     | _ID _LSQUARE literal _RSQUARE _ASSIGN num_exp _SEMICOLON

   35 num_exp: exp
   36        | num_exp _AROP exp

   37 exp: literal
   38    | _ID
   39    | function_call
   40    | _LPAREN num_exp _RPAREN
   41    | inc_dec_exp
   42    | _ID _LSQUARE literal _RSQUARE

   43 inc_dec_exp: _ID _INC
   44            | _ID _DEC
   45            | _INC _ID
   46            | _DEC _ID

   47 literal: _INT_NUMBER
   48        | _UINT_NUMBER

   49 $@7: %empty

   50 function_call: _ID $@7 _LPAREN argument _RPAREN

   51 argument: %empty
   52         | num_exp

   53 if_statement: if_part
   54             | if_part _ELSE statement

   55 @8: %empty

   56 $@9: %empty

   57 if_part: _IF _LPAREN @8 rel_exp $@9 _RPAREN statement

   58 rel_exp: num_exp _RELOP num_exp

   59 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 12 13
    _IF (259) 57
    _ELSE (260) 54
    _RETURN (261) 59
    _ID <s> (262) 5 7 12 13 24 25 33 34 38 42 43 44 45 46 50
    _INT_NUMBER <s> (263) 47
    _UINT_NUMBER <s> (264) 48
    _LPAREN (265) 5 24 29 40 50 57
    _RPAREN (266) 5 24 29 40 50 57
    _LBRACKET (267) 9 24 29 32
    _RBRACKET (268) 9 24 29 32
    _ASSIGN (269) 24 25 33 34
    _SEMICOLON (270) 12 13 24 33 34 59
    _AROP <i> (271) 36
    _RELOP <i> (272) 58
    _WHILE (273) 29
    _FOR (274) 24
    _INC (275) 43 45
    _DEC (276) 44 46
    _LSQUARE (277) 13 34 42
    _RSQUARE (278) 13 34 42
    ONLY_IF (279)


Nonterminals, with rules where they appear

    $accept (25)
        on left: 0
    program (26)
        on left: 1
        on right: 0
    function_list (27)
        on left: 2 3
        on right: 1 3
    function (28)
        on left: 5
        on right: 2 3
    $@1 (29)
        on left: 4
        on right: 5
    parameter (30)
        on left: 6 7
        on right: 5
    body (31)
        on left: 9
        on right: 5
    $@2 (32)
        on left: 8
        on right: 9
    variable_list (33)
        on left: 10 11
        on right: 9 11
    variable (34)
        on left: 12 13
        on right: 11
    statement_list (35)
        on left: 14 15
        on right: 9 15 24 29 32
    statement (36)
        on left: 16 17 18 19 20 21
        on right: 15 54 57
    for_statement (37)
        on left: 24
        on right: 21
    @3 (38)
        on left: 22
        on right: 24
    $@4 (39)
        on left: 23
        on right: 24
    for_promena <i> (40)
        on left: 25 26
        on right: 24
    while_statement (41)
        on left: 29
        on right: 20
    @5 (42)
        on left: 27
        on right: 29
    $@6 (43)
        on left: 28
        on right: 29
    while_uslov <i> (44)
        on left: 30 31
        on right: 29
    compound_statement (45)
        on left: 32
        on right: 16
    assignment_statement (46)
        on left: 33 34
        on right: 17
    num_exp <i> (47)
        on left: 35 36
        on right: 25 33 34 36 40 52 58 59
    exp <i> (48)
        on left: 37 38 39 40 41 42
        on right: 30 35 36
    inc_dec_exp <i> (49)
        on left: 43 44 45 46
        on right: 26 41
    literal <i> (50)
        on left: 47 48
        on right: 13 24 34 37 42
    function_call <i> (51)
        on left: 50
        on right: 39
    $@7 (52)
        on left: 49
        on right: 50
    argument <i> (53)
        on left: 51 52
        on right: 50
    if_statement (54)
        on left: 53 54
        on right: 18
    if_part <i> (55)
        on left: 57
        on right: 53 54
    @8 (56)
        on left: 55
        on right: 57
    $@9 (57)
        on left: 56
        on right: 57
    rel_exp <i> (58)
        on left: 58
        on right: 24 31 57
    return_statement (59)
        on left: 59
        on right: 19


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    9 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    9 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   11 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 8 ($@2)

    $@2       go to state 18
    variable  go to state 19


State 17

   12 variable: _TYPE . _ID _SEMICOLON
   13         | _TYPE . _ID _LSQUARE literal _RSQUARE _SEMICOLON

    _ID  shift, and go to state 20


State 18

    9 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 21


State 19

   11 variable_list: variable_list variable .

    $default  reduce using rule 11 (variable_list)


State 20

   12 variable: _TYPE _ID . _SEMICOLON
   13         | _TYPE _ID . _LSQUARE literal _RSQUARE _SEMICOLON

    _SEMICOLON  shift, and go to state 22
    _LSQUARE    shift, and go to state 23


State 21

    9 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   15 statement_list: statement_list . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 28
    _WHILE     shift, and go to state 29
    _FOR       shift, and go to state 30

    statement             go to state 31
    for_statement         go to state 32
    while_statement       go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 22

   12 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 12 (variable)


State 23

   13 variable: _TYPE _ID _LSQUARE . literal _RSQUARE _SEMICOLON

    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40

    literal  go to state 41


State 24

   57 if_part: _IF . _LPAREN @8 rel_exp $@9 _RPAREN statement

    _LPAREN  shift, and go to state 42


State 25

   59 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 44
    _INC          shift, and go to state 45
    _DEC          shift, and go to state 46

    num_exp        go to state 47
    exp            go to state 48
    inc_dec_exp    go to state 49
    literal        go to state 50
    function_call  go to state 51


State 26

   33 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   34                     | _ID . _LSQUARE literal _RSQUARE _ASSIGN num_exp _SEMICOLON

    _ASSIGN   shift, and go to state 52
    _LSQUARE  shift, and go to state 53


State 27

   32 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 54


State 28

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 9 (body)


State 29

   29 while_statement: _WHILE . @5 _LPAREN while_uslov $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 27 (@5)

    @5  go to state 55


State 30

   24 for_statement: _FOR . _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp $@4 _SEMICOLON for_promena _RPAREN _LBRACKET statement_list _RBRACKET

    _LPAREN  shift, and go to state 56


State 31

   15 statement_list: statement_list statement .

    $default  reduce using rule 15 (statement_list)


State 32

   21 statement: for_statement .

    $default  reduce using rule 21 (statement)


State 33

   20 statement: while_statement .

    $default  reduce using rule 20 (statement)


State 34

   16 statement: compound_statement .

    $default  reduce using rule 16 (statement)


State 35

   17 statement: assignment_statement .

    $default  reduce using rule 17 (statement)


State 36

   18 statement: if_statement .

    $default  reduce using rule 18 (statement)


State 37

   53 if_statement: if_part .
   54             | if_part . _ELSE statement

    _ELSE  shift, and go to state 57

    $default  reduce using rule 53 (if_statement)


State 38

   19 statement: return_statement .

    $default  reduce using rule 19 (statement)


State 39

   47 literal: _INT_NUMBER .

    $default  reduce using rule 47 (literal)


State 40

   48 literal: _UINT_NUMBER .

    $default  reduce using rule 48 (literal)


State 41

   13 variable: _TYPE _ID _LSQUARE literal . _RSQUARE _SEMICOLON

    _RSQUARE  shift, and go to state 58


State 42

   57 if_part: _IF _LPAREN . @8 rel_exp $@9 _RPAREN statement

    $default  reduce using rule 55 (@8)

    @8  go to state 59


State 43

   38 exp: _ID .
   42    | _ID . _LSQUARE literal _RSQUARE
   43 inc_dec_exp: _ID . _INC
   44            | _ID . _DEC
   50 function_call: _ID . $@7 _LPAREN argument _RPAREN

    _INC      shift, and go to state 60
    _DEC      shift, and go to state 61
    _LSQUARE  shift, and go to state 62

    _LPAREN   reduce using rule 49 ($@7)
    $default  reduce using rule 38 (exp)

    $@7  go to state 63


State 44

   40 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 44
    _INC          shift, and go to state 45
    _DEC          shift, and go to state 46

    num_exp        go to state 64
    exp            go to state 48
    inc_dec_exp    go to state 49
    literal        go to state 50
    function_call  go to state 51


State 45

   45 inc_dec_exp: _INC . _ID

    _ID  shift, and go to state 65


State 46

   46 inc_dec_exp: _DEC . _ID

    _ID  shift, and go to state 66


State 47

   36 num_exp: num_exp . _AROP exp
   59 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 67
    _AROP       shift, and go to state 68


State 48

   35 num_exp: exp .

    $default  reduce using rule 35 (num_exp)


State 49

   41 exp: inc_dec_exp .

    $default  reduce using rule 41 (exp)


State 50

   37 exp: literal .

    $default  reduce using rule 37 (exp)


State 51

   39 exp: function_call .

    $default  reduce using rule 39 (exp)


State 52

   33 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 44
    _INC          shift, and go to state 45
    _DEC          shift, and go to state 46

    num_exp        go to state 69
    exp            go to state 48
    inc_dec_exp    go to state 49
    literal        go to state 50
    function_call  go to state 51


State 53

   34 assignment_statement: _ID _LSQUARE . literal _RSQUARE _ASSIGN num_exp _SEMICOLON

    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40

    literal  go to state 70


State 54

   15 statement_list: statement_list . statement
   32 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 71
    _WHILE     shift, and go to state 29
    _FOR       shift, and go to state 30

    statement             go to state 31
    for_statement         go to state 32
    while_statement       go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 55

   29 while_statement: _WHILE @5 . _LPAREN while_uslov $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    _LPAREN  shift, and go to state 72


State 56

   24 for_statement: _FOR _LPAREN . _ID _ASSIGN literal @3 _SEMICOLON rel_exp $@4 _SEMICOLON for_promena _RPAREN _LBRACKET statement_list _RBRACKET

    _ID  shift, and go to state 73


State 57

   54 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _WHILE     shift, and go to state 29
    _FOR       shift, and go to state 30

    statement             go to state 74
    for_statement         go to state 32
    while_statement       go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 58

   13 variable: _TYPE _ID _LSQUARE literal _RSQUARE . _SEMICOLON

    _SEMICOLON  shift, and go to state 75


State 59

   57 if_part: _IF _LPAREN @8 . rel_exp $@9 _RPAREN statement

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 44
    _INC          shift, and go to state 45
    _DEC          shift, and go to state 46

    num_exp        go to state 76
    exp            go to state 48
    inc_dec_exp    go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 77


State 60

   43 inc_dec_exp: _ID _INC .

    $default  reduce using rule 43 (inc_dec_exp)


State 61

   44 inc_dec_exp: _ID _DEC .

    $default  reduce using rule 44 (inc_dec_exp)


State 62

   42 exp: _ID _LSQUARE . literal _RSQUARE

    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40

    literal  go to state 78


State 63

   50 function_call: _ID $@7 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 79


State 64

   36 num_exp: num_exp . _AROP exp
   40 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 80
    _AROP    shift, and go to state 68


State 65

   45 inc_dec_exp: _INC _ID .

    $default  reduce using rule 45 (inc_dec_exp)


State 66

   46 inc_dec_exp: _DEC _ID .

    $default  reduce using rule 46 (inc_dec_exp)


State 67

   59 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 59 (return_statement)


State 68

   36 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 44
    _INC          shift, and go to state 45
    _DEC          shift, and go to state 46

    exp            go to state 81
    inc_dec_exp    go to state 49
    literal        go to state 50
    function_call  go to state 51


State 69

   33 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   36 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 82
    _AROP       shift, and go to state 68


State 70

   34 assignment_statement: _ID _LSQUARE literal . _RSQUARE _ASSIGN num_exp _SEMICOLON

    _RSQUARE  shift, and go to state 83


State 71

   32 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 32 (compound_statement)


State 72

   29 while_statement: _WHILE @5 _LPAREN . while_uslov $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 44
    _INC          shift, and go to state 45
    _DEC          shift, and go to state 46

    while_uslov    go to state 84
    num_exp        go to state 76
    exp            go to state 85
    inc_dec_exp    go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 86


State 73

   24 for_statement: _FOR _LPAREN _ID . _ASSIGN literal @3 _SEMICOLON rel_exp $@4 _SEMICOLON for_promena _RPAREN _LBRACKET statement_list _RBRACKET

    _ASSIGN  shift, and go to state 87


State 74

   54 if_statement: if_part _ELSE statement .

    $default  reduce using rule 54 (if_statement)


State 75

   13 variable: _TYPE _ID _LSQUARE literal _RSQUARE _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 76

   36 num_exp: num_exp . _AROP exp
   58 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 68
    _RELOP  shift, and go to state 88


State 77

   57 if_part: _IF _LPAREN @8 rel_exp . $@9 _RPAREN statement

    $default  reduce using rule 56 ($@9)

    $@9  go to state 89


State 78

   42 exp: _ID _LSQUARE literal . _RSQUARE

    _RSQUARE  shift, and go to state 90


State 79

   50 function_call: _ID $@7 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 44
    _INC          shift, and go to state 45
    _DEC          shift, and go to state 46

    $default  reduce using rule 51 (argument)

    num_exp        go to state 91
    exp            go to state 48
    inc_dec_exp    go to state 49
    literal        go to state 50
    function_call  go to state 51
    argument       go to state 92


State 80

   40 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 40 (exp)


State 81

   36 num_exp: num_exp _AROP exp .

    $default  reduce using rule 36 (num_exp)


State 82

   33 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 33 (assignment_statement)


State 83

   34 assignment_statement: _ID _LSQUARE literal _RSQUARE . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 93


State 84

   29 while_statement: _WHILE @5 _LPAREN while_uslov . $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 28 ($@6)

    $@6  go to state 94


State 85

   30 while_uslov: exp .
   35 num_exp: exp .

    _RPAREN   reduce using rule 30 (while_uslov)
    $default  reduce using rule 35 (num_exp)


State 86

   31 while_uslov: rel_exp .

    $default  reduce using rule 31 (while_uslov)


State 87

   24 for_statement: _FOR _LPAREN _ID _ASSIGN . literal @3 _SEMICOLON rel_exp $@4 _SEMICOLON for_promena _RPAREN _LBRACKET statement_list _RBRACKET

    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40

    literal  go to state 95


State 88

   58 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 44
    _INC          shift, and go to state 45
    _DEC          shift, and go to state 46

    num_exp        go to state 96
    exp            go to state 48
    inc_dec_exp    go to state 49
    literal        go to state 50
    function_call  go to state 51


State 89

   57 if_part: _IF _LPAREN @8 rel_exp $@9 . _RPAREN statement

    _RPAREN  shift, and go to state 97


State 90

   42 exp: _ID _LSQUARE literal _RSQUARE .

    $default  reduce using rule 42 (exp)


State 91

   36 num_exp: num_exp . _AROP exp
   52 argument: num_exp .

    _AROP  shift, and go to state 68

    $default  reduce using rule 52 (argument)


State 92

   50 function_call: _ID $@7 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 98


State 93

   34 assignment_statement: _ID _LSQUARE literal _RSQUARE _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 44
    _INC          shift, and go to state 45
    _DEC          shift, and go to state 46

    num_exp        go to state 99
    exp            go to state 48
    inc_dec_exp    go to state 49
    literal        go to state 50
    function_call  go to state 51


State 94

   29 while_statement: _WHILE @5 _LPAREN while_uslov $@6 . _RPAREN _LBRACKET statement_list _RBRACKET

    _RPAREN  shift, and go to state 100


State 95

   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal . @3 _SEMICOLON rel_exp $@4 _SEMICOLON for_promena _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 22 (@3)

    @3  go to state 101


State 96

   36 num_exp: num_exp . _AROP exp
   58 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 68

    $default  reduce using rule 58 (rel_exp)


State 97

   57 if_part: _IF _LPAREN @8 rel_exp $@9 _RPAREN . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _WHILE     shift, and go to state 29
    _FOR       shift, and go to state 30

    statement             go to state 102
    for_statement         go to state 32
    while_statement       go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 98

   50 function_call: _ID $@7 _LPAREN argument _RPAREN .

    $default  reduce using rule 50 (function_call)


State 99

   34 assignment_statement: _ID _LSQUARE literal _RSQUARE _ASSIGN num_exp . _SEMICOLON
   36 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 103
    _AROP       shift, and go to state 68


State 100

   29 while_statement: _WHILE @5 _LPAREN while_uslov $@6 _RPAREN . _LBRACKET statement_list _RBRACKET

    _LBRACKET  shift, and go to state 104


State 101

   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 . _SEMICOLON rel_exp $@4 _SEMICOLON for_promena _RPAREN _LBRACKET statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 105


State 102

   57 if_part: _IF _LPAREN @8 rel_exp $@9 _RPAREN statement .

    $default  reduce using rule 57 (if_part)


State 103

   34 assignment_statement: _ID _LSQUARE literal _RSQUARE _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 34 (assignment_statement)


State 104

   29 while_statement: _WHILE @5 _LPAREN while_uslov $@6 _RPAREN _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 106


State 105

   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON . rel_exp $@4 _SEMICOLON for_promena _RPAREN _LBRACKET statement_list _RBRACKET

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 44
    _INC          shift, and go to state 45
    _DEC          shift, and go to state 46

    num_exp        go to state 76
    exp            go to state 48
    inc_dec_exp    go to state 49
    literal        go to state 50
    function_call  go to state 51
    rel_exp        go to state 107


State 106

   15 statement_list: statement_list . statement
   29 while_statement: _WHILE @5 _LPAREN while_uslov $@6 _RPAREN _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 108
    _WHILE     shift, and go to state 29
    _FOR       shift, and go to state 30

    statement             go to state 31
    for_statement         go to state 32
    while_statement       go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 107

   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp . $@4 _SEMICOLON for_promena _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 23 ($@4)

    $@4  go to state 109


State 108

   29 while_statement: _WHILE @5 _LPAREN while_uslov $@6 _RPAREN _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 29 (while_statement)


State 109

   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp $@4 . _SEMICOLON for_promena _RPAREN _LBRACKET statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 110


State 110

   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp $@4 _SEMICOLON . for_promena _RPAREN _LBRACKET statement_list _RBRACKET

    _ID   shift, and go to state 111
    _INC  shift, and go to state 45
    _DEC  shift, and go to state 46

    for_promena  go to state 112
    inc_dec_exp  go to state 113


State 111

   25 for_promena: _ID . _ASSIGN num_exp
   43 inc_dec_exp: _ID . _INC
   44            | _ID . _DEC

    _ASSIGN  shift, and go to state 114
    _INC     shift, and go to state 60
    _DEC     shift, and go to state 61


State 112

   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp $@4 _SEMICOLON for_promena . _RPAREN _LBRACKET statement_list _RBRACKET

    _RPAREN  shift, and go to state 115


State 113

   26 for_promena: inc_dec_exp .

    $default  reduce using rule 26 (for_promena)


State 114

   25 for_promena: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 43
    _INT_NUMBER   shift, and go to state 39
    _UINT_NUMBER  shift, and go to state 40
    _LPAREN       shift, and go to state 44
    _INC          shift, and go to state 45
    _DEC          shift, and go to state 46

    num_exp        go to state 116
    exp            go to state 48
    inc_dec_exp    go to state 49
    literal        go to state 50
    function_call  go to state 51


State 115

   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp $@4 _SEMICOLON for_promena _RPAREN . _LBRACKET statement_list _RBRACKET

    _LBRACKET  shift, and go to state 117


State 116

   25 for_promena: _ID _ASSIGN num_exp .
   36 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 68

    $default  reduce using rule 25 (for_promena)


State 117

   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp $@4 _SEMICOLON for_promena _RPAREN _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 118


State 118

   15 statement_list: statement_list . statement
   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp $@4 _SEMICOLON for_promena _RPAREN _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _ID        shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 119
    _WHILE     shift, and go to state 29
    _FOR       shift, and go to state 30

    statement             go to state 31
    for_statement         go to state 32
    while_statement       go to state 33
    compound_statement    go to state 34
    assignment_statement  go to state 35
    if_statement          go to state 36
    if_part               go to state 37
    return_statement      go to state 38


State 119

   24 for_statement: _FOR _LPAREN _ID _ASSIGN literal @3 _SEMICOLON rel_exp $@4 _SEMICOLON for_promena _RPAREN _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 24 (for_statement)
