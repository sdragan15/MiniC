Grammar

    0 $accept: program $end

    1 program: structs_functions

    2 function_list: function
    3              | function_list function

    4 struct_list: struct
    5            | struct_list struct

    6 structs_functions: function_list
    7                  | struct_list function_list

    8 $@1: %empty

    9 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

   10 $@2: %empty

   11 struct: _STRUCT _ID $@2 _LBRACKET struct_var_list _RBRACKET _SEMICOLON

   12 struct_var_list: %empty
   13                | struct_var_list struct_var

   14 struct_var: _TYPE _ID _SEMICOLON

   15 parameter: %empty
   16          | _TYPE _ID

   17 $@3: %empty

   18 body: _LBRACKET variable_list $@3 statement_list _RBRACKET

   19 variable_list: %empty
   20              | variable_list variable

   21 variable: _TYPE _ID _SEMICOLON
   22         | _TYPE _ID _LSQUARE literal _RSQUARE _SEMICOLON
   23         | _STRUCT _ID _ID _SEMICOLON

   24 statement_list: %empty
   25               | statement_list statement

   26 statement: compound_statement
   27          | assignment_statement
   28          | if_statement
   29          | return_statement
   30          | while_statement
   31          | for_statement

   32 @4: %empty

   33 $@5: %empty

   34 $@6: %empty

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET

   36 for_promena: _ID _ASSIGN num_exp
   37            | inc_dec_exp

   38 @7: %empty

   39 $@8: %empty

   40 while_statement: _WHILE @7 _LPAREN while_uslov $@8 _RPAREN _LBRACKET statement_list _RBRACKET

   41 while_uslov: exp
   42            | rel_exp

   43 compound_statement: _LBRACKET statement_list _RBRACKET

   44 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON
   45                     | _ID _LSQUARE array_index _RSQUARE _ASSIGN num_exp _SEMICOLON
   46                     | _STRUCT_ID _ASSIGN num_exp _SEMICOLON

   47 array_index: literal
   48            | _ID

   49 num_exp: exp
   50        | num_exp _AROP exp

   51 exp: literal
   52    | _ID
   53    | function_call
   54    | _LPAREN num_exp _RPAREN
   55    | inc_dec_exp
   56    | _ID _LSQUARE literal _RSQUARE
   57    | _ID _LSQUARE _ID _RSQUARE
   58    | _ABS _LPAREN exp _RPAREN

   59 inc_dec_exp: _ID _INC
   60            | _ID _DEC
   61            | _INC _ID
   62            | _DEC _ID

   63 literal: _INT_NUMBER
   64        | _UINT_NUMBER

   65 $@9: %empty

   66 function_call: _ID $@9 _LPAREN argument _RPAREN

   67 argument: %empty
   68         | num_exp

   69 if_statement: if_part
   70             | if_part _ELSE statement

   71 @10: %empty

   72 $@11: %empty

   73 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN statement

   74 rel_exp: num_exp _RELOP num_exp

   75 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 9 14 16 21 22
    _IF (259) 73
    _ELSE (260) 70
    _RETURN (261) 75
    _ID <s> (262) 9 11 14 16 21 22 23 35 36 44 45 48 52 56 57 59 60 61 62 66
    _INT_NUMBER <s> (263) 63
    _UINT_NUMBER <s> (264) 64
    _LPAREN (265) 9 35 40 54 58 66 73
    _RPAREN (266) 9 35 40 54 58 66 73
    _LBRACKET (267) 11 18 35 40 43
    _RBRACKET (268) 11 18 35 40 43
    _ASSIGN (269) 35 36 44 45 46
    _SEMICOLON (270) 11 14 21 22 23 35 44 45 46 75
    _AROP <i> (271) 50
    _RELOP <i> (272) 74
    _WHILE (273) 40
    _FOR (274) 35
    _INC (275) 59 61
    _DEC (276) 60 62
    _LSQUARE (277) 22 45 56 57
    _RSQUARE (278) 22 45 56 57
    _STRUCT (279) 11 23
    _STRUCT_ID <s> (280) 46
    _ABS (281) 58
    ONLY_IF (282)


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    program (29)
        on left: 1
        on right: 0
    function_list (30)
        on left: 2 3
        on right: 3 6 7
    struct_list (31)
        on left: 4 5
        on right: 5 7
    structs_functions (32)
        on left: 6 7
        on right: 1
    function (33)
        on left: 9
        on right: 2 3
    $@1 (34)
        on left: 8
        on right: 9
    struct (35)
        on left: 11
        on right: 4 5
    $@2 (36)
        on left: 10
        on right: 11
    struct_var_list (37)
        on left: 12 13
        on right: 11 13
    struct_var (38)
        on left: 14
        on right: 13
    parameter (39)
        on left: 15 16
        on right: 9
    body (40)
        on left: 18
        on right: 9
    $@3 (41)
        on left: 17
        on right: 18
    variable_list (42)
        on left: 19 20
        on right: 18 20
    variable (43)
        on left: 21 22 23
        on right: 20
    statement_list (44)
        on left: 24 25
        on right: 18 25 35 40 43
    statement (45)
        on left: 26 27 28 29 30 31
        on right: 25 70 73
    for_statement (46)
        on left: 35
        on right: 31
    @4 (47)
        on left: 32
        on right: 35
    $@5 (48)
        on left: 33
        on right: 35
    $@6 (49)
        on left: 34
        on right: 35
    for_promena <i> (50)
        on left: 36 37
        on right: 35
    while_statement (51)
        on left: 40
        on right: 30
    @7 (52)
        on left: 38
        on right: 40
    $@8 (53)
        on left: 39
        on right: 40
    while_uslov <i> (54)
        on left: 41 42
        on right: 40
    compound_statement (55)
        on left: 43
        on right: 26
    assignment_statement (56)
        on left: 44 45 46
        on right: 27
    array_index <i> (57)
        on left: 47 48
        on right: 45
    num_exp <i> (58)
        on left: 49 50
        on right: 36 44 45 46 50 54 68 74 75
    exp <i> (59)
        on left: 51 52 53 54 55 56 57 58
        on right: 41 49 50 58
    inc_dec_exp <i> (60)
        on left: 59 60 61 62
        on right: 37 55
    literal <i> (61)
        on left: 63 64
        on right: 22 35 47 51 56
    function_call <i> (62)
        on left: 66
        on right: 53
    $@9 (63)
        on left: 65
        on right: 66
    argument <i> (64)
        on left: 67 68
        on right: 66
    if_statement (65)
        on left: 69 70
        on right: 28
    if_part <i> (66)
        on left: 73
        on right: 69 70
    @10 (67)
        on left: 71
        on right: 73
    $@11 (68)
        on left: 72
        on right: 73
    rel_exp <i> (69)
        on left: 74
        on right: 35 42 73
    return_statement (70)
        on left: 75
        on right: 29


State 0

    0 $accept: . program $end

    _TYPE    shift, and go to state 1
    _STRUCT  shift, and go to state 2

    program            go to state 3
    function_list      go to state 4
    struct_list        go to state 5
    structs_functions  go to state 6
    function           go to state 7
    struct             go to state 8


State 1

    9 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 9


State 2

   11 struct: _STRUCT . _ID $@2 _LBRACKET struct_var_list _RBRACKET _SEMICOLON

    _ID  shift, and go to state 10


State 3

    0 $accept: program . $end

    $end  shift, and go to state 11


State 4

    3 function_list: function_list . function
    6 structs_functions: function_list .

    _TYPE  shift, and go to state 1

    $default  reduce using rule 6 (structs_functions)

    function  go to state 12


State 5

    5 struct_list: struct_list . struct
    7 structs_functions: struct_list . function_list

    _TYPE    shift, and go to state 1
    _STRUCT  shift, and go to state 2

    function_list  go to state 13
    function       go to state 7
    struct         go to state 14


State 6

    1 program: structs_functions .

    $default  reduce using rule 1 (program)


State 7

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 8

    4 struct_list: struct .

    $default  reduce using rule 4 (struct_list)


State 9

    9 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 8 ($@1)

    $@1  go to state 15


State 10

   11 struct: _STRUCT _ID . $@2 _LBRACKET struct_var_list _RBRACKET _SEMICOLON

    $default  reduce using rule 10 ($@2)

    $@2  go to state 16


State 11

    0 $accept: program $end .

    $default  accept


State 12

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 13

    3 function_list: function_list . function
    7 structs_functions: struct_list function_list .

    _TYPE  shift, and go to state 1

    $default  reduce using rule 7 (structs_functions)

    function  go to state 12


State 14

    5 struct_list: struct_list struct .

    $default  reduce using rule 5 (struct_list)


State 15

    9 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 17


State 16

   11 struct: _STRUCT _ID $@2 . _LBRACKET struct_var_list _RBRACKET _SEMICOLON

    _LBRACKET  shift, and go to state 18


State 17

    9 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 19

    $default  reduce using rule 15 (parameter)

    parameter  go to state 20


State 18

   11 struct: _STRUCT _ID $@2 _LBRACKET . struct_var_list _RBRACKET _SEMICOLON

    $default  reduce using rule 12 (struct_var_list)

    struct_var_list  go to state 21


State 19

   16 parameter: _TYPE . _ID

    _ID  shift, and go to state 22


State 20

    9 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 23


State 21

   11 struct: _STRUCT _ID $@2 _LBRACKET struct_var_list . _RBRACKET _SEMICOLON
   13 struct_var_list: struct_var_list . struct_var

    _TYPE      shift, and go to state 24
    _RBRACKET  shift, and go to state 25

    struct_var  go to state 26


State 22

   16 parameter: _TYPE _ID .

    $default  reduce using rule 16 (parameter)


State 23

    9 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 27

    body  go to state 28


State 24

   14 struct_var: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 29


State 25

   11 struct: _STRUCT _ID $@2 _LBRACKET struct_var_list _RBRACKET . _SEMICOLON

    _SEMICOLON  shift, and go to state 30


State 26

   13 struct_var_list: struct_var_list struct_var .

    $default  reduce using rule 13 (struct_var_list)


State 27

   18 body: _LBRACKET . variable_list $@3 statement_list _RBRACKET

    $default  reduce using rule 19 (variable_list)

    variable_list  go to state 31


State 28

    9 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 9 (function)


State 29

   14 struct_var: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 32


State 30

   11 struct: _STRUCT _ID $@2 _LBRACKET struct_var_list _RBRACKET _SEMICOLON .

    $default  reduce using rule 11 (struct)


State 31

   18 body: _LBRACKET variable_list . $@3 statement_list _RBRACKET
   20 variable_list: variable_list . variable

    _TYPE    shift, and go to state 33
    _STRUCT  shift, and go to state 34

    $default  reduce using rule 17 ($@3)

    $@3       go to state 35
    variable  go to state 36


State 32

   14 struct_var: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 14 (struct_var)


State 33

   21 variable: _TYPE . _ID _SEMICOLON
   22         | _TYPE . _ID _LSQUARE literal _RSQUARE _SEMICOLON

    _ID  shift, and go to state 37


State 34

   23 variable: _STRUCT . _ID _ID _SEMICOLON

    _ID  shift, and go to state 38


State 35

   18 body: _LBRACKET variable_list $@3 . statement_list _RBRACKET

    $default  reduce using rule 24 (statement_list)

    statement_list  go to state 39


State 36

   20 variable_list: variable_list variable .

    $default  reduce using rule 20 (variable_list)


State 37

   21 variable: _TYPE _ID . _SEMICOLON
   22         | _TYPE _ID . _LSQUARE literal _RSQUARE _SEMICOLON

    _SEMICOLON  shift, and go to state 40
    _LSQUARE    shift, and go to state 41


State 38

   23 variable: _STRUCT _ID . _ID _SEMICOLON

    _ID  shift, and go to state 42


State 39

   18 body: _LBRACKET variable_list $@3 statement_list . _RBRACKET
   25 statement_list: statement_list . statement

    _IF         shift, and go to state 43
    _RETURN     shift, and go to state 44
    _ID         shift, and go to state 45
    _LBRACKET   shift, and go to state 46
    _RBRACKET   shift, and go to state 47
    _WHILE      shift, and go to state 48
    _FOR        shift, and go to state 49
    _STRUCT_ID  shift, and go to state 50

    statement             go to state 51
    for_statement         go to state 52
    while_statement       go to state 53
    compound_statement    go to state 54
    assignment_statement  go to state 55
    if_statement          go to state 56
    if_part               go to state 57
    return_statement      go to state 58


State 40

   21 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 21 (variable)


State 41

   22 variable: _TYPE _ID _LSQUARE . literal _RSQUARE _SEMICOLON

    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60

    literal  go to state 61


State 42

   23 variable: _STRUCT _ID _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 62


State 43

   73 if_part: _IF . _LPAREN @10 rel_exp $@11 _RPAREN statement

    _LPAREN  shift, and go to state 63


State 44

   75 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    num_exp        go to state 69
    exp            go to state 70
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73


State 45

   44 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   45                     | _ID . _LSQUARE array_index _RSQUARE _ASSIGN num_exp _SEMICOLON

    _ASSIGN   shift, and go to state 74
    _LSQUARE  shift, and go to state 75


State 46

   43 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 24 (statement_list)

    statement_list  go to state 76


State 47

   18 body: _LBRACKET variable_list $@3 statement_list _RBRACKET .

    $default  reduce using rule 18 (body)


State 48

   40 while_statement: _WHILE . @7 _LPAREN while_uslov $@8 _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 38 (@7)

    @7  go to state 77


State 49

   35 for_statement: _FOR . _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    _LPAREN  shift, and go to state 78


State 50

   46 assignment_statement: _STRUCT_ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 79


State 51

   25 statement_list: statement_list statement .

    $default  reduce using rule 25 (statement_list)


State 52

   31 statement: for_statement .

    $default  reduce using rule 31 (statement)


State 53

   30 statement: while_statement .

    $default  reduce using rule 30 (statement)


State 54

   26 statement: compound_statement .

    $default  reduce using rule 26 (statement)


State 55

   27 statement: assignment_statement .

    $default  reduce using rule 27 (statement)


State 56

   28 statement: if_statement .

    $default  reduce using rule 28 (statement)


State 57

   69 if_statement: if_part .
   70             | if_part . _ELSE statement

    _ELSE  shift, and go to state 80

    $default  reduce using rule 69 (if_statement)


State 58

   29 statement: return_statement .

    $default  reduce using rule 29 (statement)


State 59

   63 literal: _INT_NUMBER .

    $default  reduce using rule 63 (literal)


State 60

   64 literal: _UINT_NUMBER .

    $default  reduce using rule 64 (literal)


State 61

   22 variable: _TYPE _ID _LSQUARE literal . _RSQUARE _SEMICOLON

    _RSQUARE  shift, and go to state 81


State 62

   23 variable: _STRUCT _ID _ID _SEMICOLON .

    $default  reduce using rule 23 (variable)


State 63

   73 if_part: _IF _LPAREN . @10 rel_exp $@11 _RPAREN statement

    $default  reduce using rule 71 (@10)

    @10  go to state 82


State 64

   52 exp: _ID .
   56    | _ID . _LSQUARE literal _RSQUARE
   57    | _ID . _LSQUARE _ID _RSQUARE
   59 inc_dec_exp: _ID . _INC
   60            | _ID . _DEC
   66 function_call: _ID . $@9 _LPAREN argument _RPAREN

    _INC      shift, and go to state 83
    _DEC      shift, and go to state 84
    _LSQUARE  shift, and go to state 85

    _LPAREN   reduce using rule 65 ($@9)
    $default  reduce using rule 52 (exp)

    $@9  go to state 86


State 65

   54 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    num_exp        go to state 87
    exp            go to state 70
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73


State 66

   61 inc_dec_exp: _INC . _ID

    _ID  shift, and go to state 88


State 67

   62 inc_dec_exp: _DEC . _ID

    _ID  shift, and go to state 89


State 68

   58 exp: _ABS . _LPAREN exp _RPAREN

    _LPAREN  shift, and go to state 90


State 69

   50 num_exp: num_exp . _AROP exp
   75 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 91
    _AROP       shift, and go to state 92


State 70

   49 num_exp: exp .

    $default  reduce using rule 49 (num_exp)


State 71

   55 exp: inc_dec_exp .

    $default  reduce using rule 55 (exp)


State 72

   51 exp: literal .

    $default  reduce using rule 51 (exp)


State 73

   53 exp: function_call .

    $default  reduce using rule 53 (exp)


State 74

   44 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    num_exp        go to state 93
    exp            go to state 70
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73


State 75

   45 assignment_statement: _ID _LSQUARE . array_index _RSQUARE _ASSIGN num_exp _SEMICOLON

    _ID           shift, and go to state 94
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60

    array_index  go to state 95
    literal      go to state 96


State 76

   25 statement_list: statement_list . statement
   43 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF         shift, and go to state 43
    _RETURN     shift, and go to state 44
    _ID         shift, and go to state 45
    _LBRACKET   shift, and go to state 46
    _RBRACKET   shift, and go to state 97
    _WHILE      shift, and go to state 48
    _FOR        shift, and go to state 49
    _STRUCT_ID  shift, and go to state 50

    statement             go to state 51
    for_statement         go to state 52
    while_statement       go to state 53
    compound_statement    go to state 54
    assignment_statement  go to state 55
    if_statement          go to state 56
    if_part               go to state 57
    return_statement      go to state 58


State 77

   40 while_statement: _WHILE @7 . _LPAREN while_uslov $@8 _RPAREN _LBRACKET statement_list _RBRACKET

    _LPAREN  shift, and go to state 98


State 78

   35 for_statement: _FOR _LPAREN . _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    _ID  shift, and go to state 99


State 79

   46 assignment_statement: _STRUCT_ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    num_exp        go to state 100
    exp            go to state 70
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73


State 80

   70 if_statement: if_part _ELSE . statement

    _IF         shift, and go to state 43
    _RETURN     shift, and go to state 44
    _ID         shift, and go to state 45
    _LBRACKET   shift, and go to state 46
    _WHILE      shift, and go to state 48
    _FOR        shift, and go to state 49
    _STRUCT_ID  shift, and go to state 50

    statement             go to state 101
    for_statement         go to state 52
    while_statement       go to state 53
    compound_statement    go to state 54
    assignment_statement  go to state 55
    if_statement          go to state 56
    if_part               go to state 57
    return_statement      go to state 58


State 81

   22 variable: _TYPE _ID _LSQUARE literal _RSQUARE . _SEMICOLON

    _SEMICOLON  shift, and go to state 102


State 82

   73 if_part: _IF _LPAREN @10 . rel_exp $@11 _RPAREN statement

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    num_exp        go to state 103
    exp            go to state 70
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73
    rel_exp        go to state 104


State 83

   59 inc_dec_exp: _ID _INC .

    $default  reduce using rule 59 (inc_dec_exp)


State 84

   60 inc_dec_exp: _ID _DEC .

    $default  reduce using rule 60 (inc_dec_exp)


State 85

   56 exp: _ID _LSQUARE . literal _RSQUARE
   57    | _ID _LSQUARE . _ID _RSQUARE

    _ID           shift, and go to state 105
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60

    literal  go to state 106


State 86

   66 function_call: _ID $@9 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 107


State 87

   50 num_exp: num_exp . _AROP exp
   54 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 108
    _AROP    shift, and go to state 92


State 88

   61 inc_dec_exp: _INC _ID .

    $default  reduce using rule 61 (inc_dec_exp)


State 89

   62 inc_dec_exp: _DEC _ID .

    $default  reduce using rule 62 (inc_dec_exp)


State 90

   58 exp: _ABS _LPAREN . exp _RPAREN

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    exp            go to state 109
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73


State 91

   75 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 75 (return_statement)


State 92

   50 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    exp            go to state 110
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73


State 93

   44 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   50 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 111
    _AROP       shift, and go to state 92


State 94

   48 array_index: _ID .

    $default  reduce using rule 48 (array_index)


State 95

   45 assignment_statement: _ID _LSQUARE array_index . _RSQUARE _ASSIGN num_exp _SEMICOLON

    _RSQUARE  shift, and go to state 112


State 96

   47 array_index: literal .

    $default  reduce using rule 47 (array_index)


State 97

   43 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 43 (compound_statement)


State 98

   40 while_statement: _WHILE @7 _LPAREN . while_uslov $@8 _RPAREN _LBRACKET statement_list _RBRACKET

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    while_uslov    go to state 113
    num_exp        go to state 103
    exp            go to state 114
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73
    rel_exp        go to state 115


State 99

   35 for_statement: _FOR _LPAREN _ID . _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    _ASSIGN  shift, and go to state 116


State 100

   46 assignment_statement: _STRUCT_ID _ASSIGN num_exp . _SEMICOLON
   50 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 117
    _AROP       shift, and go to state 92


State 101

   70 if_statement: if_part _ELSE statement .

    $default  reduce using rule 70 (if_statement)


State 102

   22 variable: _TYPE _ID _LSQUARE literal _RSQUARE _SEMICOLON .

    $default  reduce using rule 22 (variable)


State 103

   50 num_exp: num_exp . _AROP exp
   74 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 92
    _RELOP  shift, and go to state 118


State 104

   73 if_part: _IF _LPAREN @10 rel_exp . $@11 _RPAREN statement

    $default  reduce using rule 72 ($@11)

    $@11  go to state 119


State 105

   57 exp: _ID _LSQUARE _ID . _RSQUARE

    _RSQUARE  shift, and go to state 120


State 106

   56 exp: _ID _LSQUARE literal . _RSQUARE

    _RSQUARE  shift, and go to state 121


State 107

   66 function_call: _ID $@9 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    $default  reduce using rule 67 (argument)

    num_exp        go to state 122
    exp            go to state 70
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73
    argument       go to state 123


State 108

   54 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 54 (exp)


State 109

   58 exp: _ABS _LPAREN exp . _RPAREN

    _RPAREN  shift, and go to state 124


State 110

   50 num_exp: num_exp _AROP exp .

    $default  reduce using rule 50 (num_exp)


State 111

   44 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 44 (assignment_statement)


State 112

   45 assignment_statement: _ID _LSQUARE array_index _RSQUARE . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 125


State 113

   40 while_statement: _WHILE @7 _LPAREN while_uslov . $@8 _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 39 ($@8)

    $@8  go to state 126


State 114

   41 while_uslov: exp .
   49 num_exp: exp .

    _RPAREN   reduce using rule 41 (while_uslov)
    $default  reduce using rule 49 (num_exp)


State 115

   42 while_uslov: rel_exp .

    $default  reduce using rule 42 (while_uslov)


State 116

   35 for_statement: _FOR _LPAREN _ID _ASSIGN . literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60

    literal  go to state 127


State 117

   46 assignment_statement: _STRUCT_ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 46 (assignment_statement)


State 118

   74 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    num_exp        go to state 128
    exp            go to state 70
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73


State 119

   73 if_part: _IF _LPAREN @10 rel_exp $@11 . _RPAREN statement

    _RPAREN  shift, and go to state 129


State 120

   57 exp: _ID _LSQUARE _ID _RSQUARE .

    $default  reduce using rule 57 (exp)


State 121

   56 exp: _ID _LSQUARE literal _RSQUARE .

    $default  reduce using rule 56 (exp)


State 122

   50 num_exp: num_exp . _AROP exp
   68 argument: num_exp .

    _AROP  shift, and go to state 92

    $default  reduce using rule 68 (argument)


State 123

   66 function_call: _ID $@9 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 130


State 124

   58 exp: _ABS _LPAREN exp _RPAREN .

    $default  reduce using rule 58 (exp)


State 125

   45 assignment_statement: _ID _LSQUARE array_index _RSQUARE _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    num_exp        go to state 131
    exp            go to state 70
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73


State 126

   40 while_statement: _WHILE @7 _LPAREN while_uslov $@8 . _RPAREN _LBRACKET statement_list _RBRACKET

    _RPAREN  shift, and go to state 132


State 127

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal . @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 32 (@4)

    @4  go to state 133


State 128

   50 num_exp: num_exp . _AROP exp
   74 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 92

    $default  reduce using rule 74 (rel_exp)


State 129

   73 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN . statement

    _IF         shift, and go to state 43
    _RETURN     shift, and go to state 44
    _ID         shift, and go to state 45
    _LBRACKET   shift, and go to state 46
    _WHILE      shift, and go to state 48
    _FOR        shift, and go to state 49
    _STRUCT_ID  shift, and go to state 50

    statement             go to state 134
    for_statement         go to state 52
    while_statement       go to state 53
    compound_statement    go to state 54
    assignment_statement  go to state 55
    if_statement          go to state 56
    if_part               go to state 57
    return_statement      go to state 58


State 130

   66 function_call: _ID $@9 _LPAREN argument _RPAREN .

    $default  reduce using rule 66 (function_call)


State 131

   45 assignment_statement: _ID _LSQUARE array_index _RSQUARE _ASSIGN num_exp . _SEMICOLON
   50 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 135
    _AROP       shift, and go to state 92


State 132

   40 while_statement: _WHILE @7 _LPAREN while_uslov $@8 _RPAREN . _LBRACKET statement_list _RBRACKET

    _LBRACKET  shift, and go to state 136


State 133

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 . _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 137


State 134

   73 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN statement .

    $default  reduce using rule 73 (if_part)


State 135

   45 assignment_statement: _ID _LSQUARE array_index _RSQUARE _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 45 (assignment_statement)


State 136

   40 while_statement: _WHILE @7 _LPAREN while_uslov $@8 _RPAREN _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 24 (statement_list)

    statement_list  go to state 138


State 137

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON . rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    num_exp        go to state 103
    exp            go to state 70
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73
    rel_exp        go to state 139


State 138

   25 statement_list: statement_list . statement
   40 while_statement: _WHILE @7 _LPAREN while_uslov $@8 _RPAREN _LBRACKET statement_list . _RBRACKET

    _IF         shift, and go to state 43
    _RETURN     shift, and go to state 44
    _ID         shift, and go to state 45
    _LBRACKET   shift, and go to state 46
    _RBRACKET   shift, and go to state 140
    _WHILE      shift, and go to state 48
    _FOR        shift, and go to state 49
    _STRUCT_ID  shift, and go to state 50

    statement             go to state 51
    for_statement         go to state 52
    while_statement       go to state 53
    compound_statement    go to state 54
    assignment_statement  go to state 55
    if_statement          go to state 56
    if_part               go to state 57
    return_statement      go to state 58


State 139

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp . $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 33 ($@5)

    $@5  go to state 141


State 140

   40 while_statement: _WHILE @7 _LPAREN while_uslov $@8 _RPAREN _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 40 (while_statement)


State 141

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 . _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    _SEMICOLON  shift, and go to state 142


State 142

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON . for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    _ID   shift, and go to state 143
    _INC  shift, and go to state 66
    _DEC  shift, and go to state 67

    for_promena  go to state 144
    inc_dec_exp  go to state 145


State 143

   36 for_promena: _ID . _ASSIGN num_exp
   59 inc_dec_exp: _ID . _INC
   60            | _ID . _DEC

    _ASSIGN  shift, and go to state 146
    _INC     shift, and go to state 83
    _DEC     shift, and go to state 84


State 144

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena . $@6 _RPAREN _LBRACKET statement_list _RBRACKET

    $default  reduce using rule 34 ($@6)

    $@6  go to state 147


State 145

   37 for_promena: inc_dec_exp .

    $default  reduce using rule 37 (for_promena)


State 146

   36 for_promena: _ID _ASSIGN . num_exp

    _ID           shift, and go to state 64
    _INT_NUMBER   shift, and go to state 59
    _UINT_NUMBER  shift, and go to state 60
    _LPAREN       shift, and go to state 65
    _INC          shift, and go to state 66
    _DEC          shift, and go to state 67
    _ABS          shift, and go to state 68

    num_exp        go to state 148
    exp            go to state 70
    inc_dec_exp    go to state 71
    literal        go to state 72
    function_call  go to state 73


State 147

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 . _RPAREN _LBRACKET statement_list _RBRACKET

    _RPAREN  shift, and go to state 149


State 148

   36 for_promena: _ID _ASSIGN num_exp .
   50 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 92

    $default  reduce using rule 36 (for_promena)


State 149

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN . _LBRACKET statement_list _RBRACKET

    _LBRACKET  shift, and go to state 150


State 150

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 24 (statement_list)

    statement_list  go to state 151


State 151

   25 statement_list: statement_list . statement
   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list . _RBRACKET

    _IF         shift, and go to state 43
    _RETURN     shift, and go to state 44
    _ID         shift, and go to state 45
    _LBRACKET   shift, and go to state 46
    _RBRACKET   shift, and go to state 152
    _WHILE      shift, and go to state 48
    _FOR        shift, and go to state 49
    _STRUCT_ID  shift, and go to state 50

    statement             go to state 51
    for_statement         go to state 52
    while_statement       go to state 53
    compound_statement    go to state 54
    assignment_statement  go to state 55
    if_statement          go to state 56
    if_part               go to state 57
    return_statement      go to state 58


State 152

   35 for_statement: _FOR _LPAREN _ID _ASSIGN literal @4 _SEMICOLON rel_exp $@5 _SEMICOLON for_promena $@6 _RPAREN _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 35 (for_statement)
